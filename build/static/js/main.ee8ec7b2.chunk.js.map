{"version":3,"sources":["components/SignupForm.js","components/AdminPage.js","App.js","index.js"],"names":["SignupForm","formData","setFormData","useState","name","age","gender","address","phone_number","email_address","handleChange","e","value","target","prevState","_objectSpread","_jsxs","children","_jsx","onSubmit","async","preventDefault","response","axios","post","alert","data","id","error","console","type","placeholder","onChange","required","min","AdminPage","members","setMembers","editingMember","setEditingMember","useEffect","fetchMembers","get","log","handleUpdateChange","put","concat","prevMembers","map","member","onClick","handleEdit","window","confirm","delete","filter","handleDelete","App","Router","className","Link","to","Switch","Route","exact","path","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee8ec7b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction SignupForm() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    age: '',\r\n    gender: '',\r\n    address: '',\r\n    phone_number: '',\r\n    email_address: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/members', formData);\r\n      alert('Member added successfully! ID: ' + response.data.id);\r\n      // Reset form after successful submission\r\n      setFormData({\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n        address: '',\r\n        phone_number: '',\r\n        email_address: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding member:', error);\r\n      // Mock success for demo purposes when backend is not available\r\n      alert('Member registration received (demo mode - backend not available)');\r\n      // Reset form\r\n      setFormData({\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n        address: '',\r\n        phone_number: '',\r\n        email_address: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Jangs Shopping Mall Membership</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Full Name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"age\"\r\n          placeholder=\"Age\"\r\n          value={formData.age}\r\n          onChange={handleChange}\r\n          min=\"18\"\r\n          required\r\n        />\r\n        <select\r\n          name=\"gender\"\r\n          value={formData.gender}\r\n          onChange={handleChange}\r\n          required\r\n        >\r\n          <option value=\"\">Select Gender</option>\r\n          <option value=\"male\">Male</option>\r\n          <option value=\"female\">Female</option>\r\n          <option value=\"other\">Other</option>\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          placeholder=\"Address\"\r\n          value={formData.address}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"phone_number\"\r\n          placeholder=\"Phone Number\"\r\n          value={formData.phone_number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email_address\"\r\n          placeholder=\"Email Address\"\r\n          value={formData.email_address}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AdminPage() {\r\n  const [members, setMembers] = useState([]);\r\n  const [editingMember, setEditingMember] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMembers();\r\n  }, []);\r\n\r\n  const fetchMembers = async () => {\r\n    try {\r\n      const response = await axios.get('/members');\r\n      setMembers(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching members:', error);\r\n      // Show mock data when backend is not available\r\n      setMembers([\r\n        {\r\n          id: 1,\r\n          name: 'John Doe',\r\n          age: 25,\r\n          gender: 'Male',\r\n          address: '123 Main St, City',\r\n          phone_number: '555-0123',\r\n          email_address: 'john.doe@email.com'\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Jane Smith',\r\n          age: 30,\r\n          gender: 'Female',\r\n          address: '456 Oak Ave, Town',\r\n          phone_number: '555-0456',\r\n          email_address: 'jane.smith@email.com'\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Mike Johnson',\r\n          age: 28,\r\n          gender: 'Male',\r\n          address: '789 Pine Rd, Village',\r\n          phone_number: '555-0789',\r\n          email_address: 'mike.johnson@email.com'\r\n        }\r\n      ]);\r\n      console.log('Using mock data - backend not available');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this member?')) {\r\n      try {\r\n        await axios.delete(`/members/${id}`);\r\n        fetchMembers();\r\n        alert('Member deleted successfully');\r\n      } catch (error) {\r\n        console.error('Error deleting member:', error);\r\n        // Mock delete for demo purposes when backend is not available\r\n        setMembers(prevMembers => prevMembers.filter(member => member.id !== id));\r\n        alert('Member deleted (demo mode - backend not available)');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEdit = (member) => {\r\n    setEditingMember({...member});\r\n  };\r\n\r\n  const handleUpdateChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditingMember(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`/members/${editingMember.id}`, editingMember);\r\n      fetchMembers();\r\n      setEditingMember(null);\r\n      alert('Member updated successfully');\r\n    } catch (error) {\r\n      console.error('Error updating member:', error);\r\n      // Mock update for demo purposes when backend is not available\r\n      setMembers(prevMembers => \r\n        prevMembers.map(member => \r\n          member.id === editingMember.id ? editingMember : member\r\n        )\r\n      );\r\n      setEditingMember(null);\r\n      alert('Member updated (demo mode - backend not available)');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin - Member Management</h2>\r\n      {editingMember && (\r\n        <form onSubmit={handleUpdate}>\r\n          <h3>Edit Member</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={editingMember.name}\r\n            onChange={handleUpdateChange}\r\n            placeholder=\"Full Name\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"age\"\r\n            value={editingMember.age}\r\n            onChange={handleUpdateChange}\r\n            placeholder=\"Age\"\r\n            min=\"18\"\r\n            required\r\n          />\r\n          <select\r\n            name=\"gender\"\r\n            value={editingMember.gender}\r\n            onChange={handleUpdateChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select Gender</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            value={editingMember.address}\r\n            onChange={handleUpdateChange}\r\n            placeholder=\"Address\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"tel\"\r\n            name=\"phone_number\"\r\n            value={editingMember.phone_number}\r\n            onChange={handleUpdateChange}\r\n            placeholder=\"Phone Number\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email_address\"\r\n            value={editingMember.email_address}\r\n            onChange={handleUpdateChange}\r\n            placeholder=\"Email Address\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Update Member</button>\r\n          <button type=\"button\" onClick={() => setEditingMember(null)}>Cancel</button>\r\n        </form>\r\n      )}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Age</th>\r\n            <th>Gender</th>\r\n            <th>Address</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {members.map((member) => (\r\n            <tr key={member.id}>\r\n              <td>{member.id}</td>\r\n              <td>{member.name}</td>\r\n              <td>{member.age}</td>\r\n              <td>{member.gender}</td>\r\n              <td>{member.address}</td>\r\n              <td>{member.phone_number}</td>\r\n              <td>{member.email_address}</td>\r\n              <td>\r\n                <button onClick={() => handleEdit(member)}>Edit</button>\r\n                <button onClick={() => handleDelete(member.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport SignupForm from './components/SignupForm';\r\nimport AdminPage from './components/AdminPage';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Sign Up</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/admin\">Admin</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <SignupForm />\r\n          </Route>\r\n          <Route path=\"/admin\">\r\n            <AdminPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}